@page "/employee/deleteemployee"
@page "/employee/delete/{EmployeeId:int}"
@using EmployeeManagement.Shared.Models
@inject NavigationManager NavigationManager
@inject HttpClient Http

<h3>DeleteEmployee</h3>
<br />
<div class="form-group">
    <h4>Do you want to delete this employee?</h4>
    <table class="table">
        <tbody>
            <tr>
                <td>Name</td>
                <td>@employee.EmployeeName</td>
            </tr>
            <tr>
                <td>E-mail</td>
                <td>@employee.EmailId</td>
            </tr>
            <tr>
                <td>Date Of Joining</td>
                <td>@employee.Doj</td>
            </tr>
            <tr>
                <td>Department</td>
                <td>@employee.DepartmentId</td>
            </tr>
        </tbody>
    </table>
</div>
<div class="form-group">
    <input type="submit" value="Delete" @onclick="(async () => await RemoveUser(employee.EmployeeId))" class="btn btn-danger" />
    <input type="submit" value="Cancel" @onclick="(() => Cancel())" class="btn btn-warning" />
</div>
@code {
    [Parameter]
    public int employeeId { get; set; }
    Employee employee = new Employee();
    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("OnInitializedAsync");
        employee = await Http.GetFromJsonAsync<Employee>("/api/Employee/GetEmployeeByID/" + Convert.ToInt32(employeeId));
    }
    protected async Task RemoveUser(int EmployeeId)
    {
        Console.WriteLine(employee);
        await Http.DeleteAsync("api/Employee/DeleteEmployee/" + EmployeeId);
        NavigationManager.NavigateTo("/employee/employeelist");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/employee/employeelist");
    }
}
