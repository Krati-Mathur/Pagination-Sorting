@page "/employee/addemployee"
@page "/employee/edit/{EmployeeId:int}"
@using EmployeeManagement.Shared.Models
@inject NavigationManager NavigationManager
@inject HttpClient Http

<h3>AddEmployee</h3>
<hr />
<EditForm Model="@employee" OnValidSubmit="SaveUser">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="employee.EmployeeName" />
        </div>
        <ValidationMessage For="@(() => employee.EmployeeName)" />
    </div>
    <div class="mb-3">
        <label for="Emailid" class="form-label">E-mail</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="employee.EmailId" />
        </div>
        <ValidationMessage For="@(() => employee.EmailId)" />
    </div>
    <div class="mb-3">
        <label for="DateOfJoining" class="form-label">Date Of Joining</label>
        <div class="col-md-4">
            <InputDate class="form-control" @bind-Value="employee.Doj" />
        </div>
        <ValidationMessage For="@(() => employee.Doj)" />
    </div>
    <div class="mb-3">
        <label for="Department" class="form-label">Department</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="employee.DepartmentId" />
        </div>
        <ValidationMessage For="@(() => employee.DepartmentId)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int employeeId { get; set; }
    protected string Title = "Add";
    protected Employee employee = new();
    protected override async Task OnParametersSetAsync()
    {
        if (employeeId != 0)
        {
            Title = "Edit";
            employee = await Http.GetFromJsonAsync<Employee>("api/Employee/GetEmployeeByID/" + employeeId);
        }
    }
    protected async Task SaveUser()
    {
        if (employee.EmployeeId != 0)
        {
            await Http.PutAsJsonAsync("api/Employee/EditEmployee", employee);
        }
        else
        {
            await Http.PostAsJsonAsync("api/Employee/CreateEmployee", employee);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/employee/employeelist");
    }
}
